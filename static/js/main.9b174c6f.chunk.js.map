{"version":3,"sources":["components/Fields/DeleteButton.js","components/Fields/Value.js","components/Fields.js","components/DisplayError.js","components/CSV.js","components/Hashing.js","components/LoadCSV.js","utils/noAccent.js","components/ButtonHash.js","App.js","theme.js","index.js"],"names":["DeleteButton","index","className","fields","dispatch","IconButton","aria-label","onClick","pop","fontSize","Value","dom","field","columns","type","TextField","label","id","value","constant","onChange","event","target","completed","Fragment","InputLabel","Select","selected","filter","column","map","item","MenuItem","key","headerName","useStyles","makeStyles","theme","fab","position","bottom","spacing","right","delete","top","emptyField","funcs","Fields","classes","Grid","container","xs","Box","p","Typography","variant","FormControl","fullWidth","labelId","multiple","input","Input","func","pb","length","Divider","Fab","color","size","push","DisplayError","error","handleClose","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","defaultProps","d","console","log","CSV","csv","now","Date","data","separator","filename","getTime","Hashing","addedColumnName","hashing","LoadCSV","htmlFor","inputId","inputStyle","display","onFileLoaded","i","element","width","shift","y","rows","row","datas","forEach","component","accentsMap","a","A","e","E","I","o","O","u","U","c","C","n","N","noAccent","text","Object","keys","reduce","acc","cur","replace","RegExp","ButtonHash","newColumns","newRows","string","toLowerCase","toUpperCase","performFunctions","join","md5","sha256","entries","root","flexGrow","title","initialState","reducer","state","action","App","useReducer","AppBar","Toolbar","pt","pl","pr","height","pageSize","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","mx","createMuiTheme","palette","primary","main","secondary","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.9b174c6f.chunk.js","sourcesContent":["import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst DeleteButton = ({ index, className, fields, dispatch }) => {\n  const deleteField = () => {\n    fields.pop();\n    dispatch({ fields: fields });\n  };\n\n  return index === 0 ? (\n    ''\n  ) : (\n    <IconButton aria-label=\"delete\" className={className} onClick={deleteField}>\n      <DeleteIcon fontSize=\"small\" />\n    </IconButton>\n  );\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst Value = ({ field, index, fields, columns, dispatch }) => {\n  let dom;\n  switch (field.type) {\n    case 'constant':\n      dom = (\n        <TextField\n          label=\"Value\"\n          id={`value-constant-textfield-${index}`}\n          value={field.constant}\n          onChange={(event) => {\n            fields[index] = {\n              ...field,\n              constant: event.target.value,\n              completed: true,\n            };\n            dispatch({ fields });\n          }}\n        />\n      );\n      break;\n\n    case 'field':\n      dom = (\n        <React.Fragment>\n          <InputLabel id={`field-select-label-${index}`}>\n            Choose field\n          </InputLabel>\n          <Select\n            id={`field-select-${index}`}\n            value={field.selected}\n            onChange={(event) => {\n              fields[index] = {\n                ...field,\n                selected: event.target.value,\n                completed: true,\n              };\n              dispatch({ fields });\n            }}\n          >\n            {columns\n              .filter((column) => column.field !== 'field_add')\n              .map((item) => (\n                <MenuItem key={`key_${item.field}`} value={item.field}>\n                  {item.headerName}\n                </MenuItem>\n              ))}\n          </Select>\n        </React.Fragment>\n      );\n      break;\n\n    default:\n      dom = '';\n      break;\n  }\n\n  return dom;\n};\n\nexport default Value;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Fab from '@material-ui/core/Fab';\nimport Divider from '@material-ui/core/Divider';\nimport AddIcon from '@material-ui/icons/Add';\nimport Input from '@material-ui/core/Input';\nimport DeleteButton from './Fields/DeleteButton';\nimport Value from './Fields/Value';\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  delete: {\n    top: theme.spacing(-1),\n  },\n}));\n\nconst emptyField = {\n  selected: '',\n  type: '',\n  constant: '',\n  completed: false,\n  funcs: [],\n};\n\nfunction Fields({ fields, columns, dispatch }) {\n  const classes = useStyles();\n\n  const addField = () => {\n    fields.push(emptyField);\n    dispatch({ fields: fields });\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        {fields.map((field, index) => (\n          <React.Fragment key={`key-field-select-${index}`}>\n            <Box p={2}>\n              <Grid container>\n                <Grid item xs={11}>\n                  <Typography variant=\"h6\">{`Field ${index + 1}`}</Typography>\n                </Grid>\n                <Grid item xs={1}>\n                  <DeleteButton\n                    index={index}\n                    fields={fields}\n                    className={classes.delete}\n                    dispatch={dispatch}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControl fullWidth={true}>\n                    <InputLabel id={`field-type-select-label-${index}`}>\n                      Choose type\n                    </InputLabel>\n                    <Select\n                      id=\"field-type-select\"\n                      value={field.type}\n                      onChange={(event) => {\n                        fields[index] = {\n                          ...field,\n                          type: event.target.value,\n                          selected: '',\n                          constant: '',\n                          completed: false,\n                        };\n                        dispatch({ fields });\n                      }}\n                    >\n                      <MenuItem value=\"constant\">Constant</MenuItem>\n                      <MenuItem value=\"field\">Imported field</MenuItem>\n                    </Select>\n                  </FormControl>\n                  <FormControl fullWidth={true}>\n                    <Value\n                      field={field}\n                      index={index}\n                      dispatch={dispatch}\n                      columns={columns}\n                      fields={fields}\n                    />\n                  </FormControl>\n                  <FormControl fullWidth={true}>\n                    <InputLabel id={`field-func-select-label-${index}`}>\n                      Functions to perform\n                    </InputLabel>\n                    <Select\n                      labelId={`field-func-select-label-${index}`}\n                      id={`field-func-select-${index}`}\n                      multiple\n                      value={field.funcs}\n                      onChange={(event) => {\n                        fields[index] = {\n                          ...field,\n                          funcs: event.target.value,\n                        };\n                        dispatch({ fields });\n                      }}\n                      input={<Input />}\n                    >\n                      {['toLowerCase', 'toUpperCase', 'no accent'].map(\n                        (func) => (\n                          <MenuItem\n                            key={`field-func-item-${func}-${index}`}\n                            value={func}\n                          >\n                            {func}\n                          </MenuItem>\n                        )\n                      )}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n            </Box>\n            <Box pb={1}>{index < fields.length - 1 ? <Divider /> : ''}</Box>\n          </React.Fragment>\n        ))}\n      </Grid>\n      <Grid item xs={12}>\n        <Box p={3}>\n          <Fab\n            color=\"primary\"\n            aria-label=\"add\"\n            size=\"small\"\n            className={classes.fab}\n            onClick={addField}\n          >\n            <AddIcon />\n          </Fab>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Fields;\nexport { emptyField };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\n\nconst DisplayError = ({ error, dispatch }) => {\n  const handleClose = () => {\n    dispatch({ error: '' });\n  };\n\n  if (error) {\n    return (\n      <React.Fragment>\n        <Dialog\n          open={true}\n          onClose={handleClose}\n          aria-labelledby=\"error-dialog-title\"\n        >\n          <DialogTitle id=\"error-dialog-title\">\n            Something went wrong:\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>{error}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    );\n  }\n\n  return '';\n};\n\nDisplayError.defaultProps = {\n  error: '',\n  dispatch: (d) => console.log(d),\n};\n\nDisplayError.propTypes = {\n  error: PropTypes.string,\n  dispatch: PropTypes.func,\n};\n\nexport default DisplayError;\n","import React from 'react';\nimport { CSVLink } from 'react-csv';\n\nconst CSV = ({ csv }) => {\n  if (csv.length > 0) {\n    const now = new Date();\n    return (\n      <CSVLink\n        data={csv}\n        separator={';'}\n        className=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-fullWidth\"\n        filename={`hash-data-iu-${now.getTime()}.csv`}\n      >\n        Download result\n      </CSVLink>\n    );\n  }\n\n  return '';\n};\n\nexport default CSV;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst Hashing = ({ addedColumnName, hashing, dispatch }) => {\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Box p={2}>\n          <FormControl fullWidth={true}>\n            <TextField\n              id=\"column_name\"\n              label=\"Added column name\"\n              value={addedColumnName}\n              onChange={(event) =>\n                dispatch({ addedColumnName: event.target.value })\n              }\n            />\n          </FormControl>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Box p={2}>\n          <FormControl fullWidth={true}>\n            <InputLabel id=\"hashing-select-label\">\n              Choose hash function\n            </InputLabel>\n            <Select\n              id=\"hashing-select\"\n              value={hashing}\n              onChange={(event) => dispatch({ hashing: event.target.value })}\n            >\n              <MenuItem value=\"md5\">MD5</MenuItem>\n              <MenuItem value=\"sha256\">SHA256</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Hashing;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CSVReader from 'react-csv-reader';\n\nconst LoadCSV = ({ dispatch }) => {\n  const loadData = (data) => {\n    let i = 0;\n    const columns = data[0].map((element) => {\n      i++;\n      return { field: `field_${i}`, headerName: element, width: 250 };\n    });\n    data.shift();\n\n    let y = 0;\n    const rows = data.map((row) => {\n      y++;\n      const datas = { id: y };\n      i = 0;\n      row.forEach((value) => {\n        i++;\n        datas[`field_${i}`] = value;\n      });\n      return datas;\n    });\n\n    dispatch({ columns, rows });\n  };\n\n  return (\n    <label htmlFor=\"upload-csv\">\n      <CSVReader\n        inputId=\"upload-csv\"\n        inputStyle={{ display: 'none' }}\n        onFileLoaded={loadData}\n      />\n      <Button color=\"inherit\" component=\"span\">\n        Load CSV File\n      </Button>\n    </label>\n  );\n};\n\nexport default LoadCSV;\n","const accentsMap = {\n  a: 'á|à|ã|â|ä',\n  A: 'À|Á|Ã|Â|Ä',\n  e: 'é|è|ê|ë',\n  E: 'É|È|Ê|Ë',\n  i: 'í|ì|î|ï',\n  I: 'Í|Ì|Î|Ï',\n  o: 'ó|ò|ô|õ|ö',\n  O: 'Ó|Ò|Ô|Õ|Ö',\n  u: 'ú|ù|û|ü',\n  U: 'Ú|Ù|Û|Ü',\n  c: 'ç',\n  C: 'Ç',\n  n: 'ñ',\n  N: 'Ñ',\n};\n\nconst noAccent = (text) =>\n  Object.keys(accentsMap).reduce(\n    (acc, cur) => acc.replace(new RegExp(accentsMap[cur], 'g'), cur),\n    text\n  );\n\nexport default noAccent;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport md5 from 'js-md5';\nimport sha256 from 'js-sha256';\nimport noAccent from '../utils/noAccent';\n\nconst performFunctions = (funcs, string) => {\n  funcs.forEach((func) => {\n    switch (func) {\n      case 'toLowerCase':\n        string = string.toLowerCase();\n        break;\n\n      case 'toUpperCase':\n        string = string.toUpperCase();\n        break;\n\n      case 'no accent':\n        string = noAccent(string);\n        break;\n\n      default:\n        break;\n    }\n  });\n\n  return string;\n};\n\nconst ButtonHash = ({\n  addedColumnName,\n  columns,\n  rows,\n  fields,\n  hashing,\n  dispatch,\n}) => {\n  const encode = () => {\n    if (!addedColumnName) {\n      return dispatch({ error: 'Added column name is empty' });\n    }\n\n    if (fields.filter((field) => field.completed).length !== fields.length) {\n      return dispatch({ error: 'No field selected' });\n    }\n\n    const newColumns = columns.filter((column) => column.field !== 'field_add');\n\n    newColumns.push({\n      field: 'field_add',\n      headerName: addedColumnName,\n      width: 250,\n    });\n\n    const newRows = rows.map((row) => {\n      const string = fields\n        .map((field) =>\n          performFunctions(\n            field.funcs,\n            field.selected ? row[field.selected] : field.constant\n          )\n        )\n        .join('');\n\n      let value;\n      if (hashing === 'md5') {\n        value = md5(string);\n      } else if (hashing === 'sha256') {\n        value = sha256(string);\n      }\n      row['field_add'] = value;\n      return row;\n    });\n\n    const csv = [];\n\n    csv.push(newColumns.map((column) => column.headerName));\n    rows.forEach((row) =>\n      csv.push(\n        Object.entries(row)\n          .filter((value) => value[0] !== 'id')\n          .map((value) => value[1])\n      )\n    );\n\n    dispatch({ columns: newColumns, rows: newRows, csv });\n  };\n  return (\n    <Button variant=\"contained\" color=\"primary\" fullWidth onClick={encode}>\n      Hash\n    </Button>\n  );\n};\n\nexport default ButtonHash;\n","import React, { useReducer } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Div100vh from 'react-div-100vh';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Fields, { emptyField } from './components/Fields';\nimport DisplayError from './components/DisplayError';\nimport CSV from './components/CSV';\nimport Hashing from './components/Hashing';\nimport LoadCSV from './components/LoadCSV';\nimport ButtonHash from './components/ButtonHash';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst initialState = {\n  columns: [],\n  rows: [],\n  hashing: 'sha256',\n  addedColumnName: 'Added column',\n  error: '',\n  fields: [emptyField],\n  csv: [],\n};\n\nfunction reducer(state, action) {\n  return { ...state, ...action };\n}\n\nexport default function App() {\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <Div100vh className={classes.root}>\n      <DisplayError error={state.error} dispatch={dispatch} />\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Hash Data UI\n          </Typography>\n          <label htmlFor=\"upload-photo\">\n            <LoadCSV dispatch={dispatch} />\n          </label>\n        </Toolbar>\n      </AppBar>\n      <Grid container>\n        <Grid item xs={9}>\n          <Box pt={5} pl={5} pr={2} height=\"90vh\" width=\"100%\">\n            <DataGrid\n              rows={state.rows}\n              columns={state.columns}\n              pageSize={100}\n            />\n          </Box>\n        </Grid>\n        <Grid item xs={3}>\n          <Box pt={5} pr={5} pl={2}>\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel-hashing-content\"\n                id=\"panel-hashing-header\"\n              >\n                <Typography>Hashing</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Hashing\n                  addedColumnName={state.addedColumnName}\n                  hashing={state.hashing}\n                  dispatch={dispatch}\n                />\n              </AccordionDetails>\n            </Accordion>\n            <Accordion>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel-fields-content\"\n                id=\"panel-fields-header\"\n              >\n                <Typography>Fields</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Fields\n                  fields={state.fields}\n                  columns={state.columns}\n                  dispatch={dispatch}\n                />\n              </AccordionDetails>\n            </Accordion>\n            <Box p={2} mx=\"auto\">\n              <ButtonHash {...state} dispatch={dispatch} />\n            </Box>\n            <Box pt={0.4} pb={2} pl={2} pr={2} mx=\"auto\">\n              <CSV csv={state.csv} />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </Div100vh>\n  );\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport 'typeface-roboto';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}